#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Medic
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="pharmacien")]
	public partial class PharmacienLinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertclient(client instance);
    partial void Updateclient(client instance);
    partial void Deleteclient(client instance);
    partial void InsertMedicament(Medicament instance);
    partial void UpdateMedicament(Medicament instance);
    partial void DeleteMedicament(Medicament instance);
    partial void InsertMed_Order(Med_Order instance);
    partial void UpdateMed_Order(Med_Order instance);
    partial void DeleteMed_Order(Med_Order instance);
    #endregion
		
		public PharmacienLinqDataContext() : 
				base(global::Medic.Properties.Settings.Default.pharmacienConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PharmacienLinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PharmacienLinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PharmacienLinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PharmacienLinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<client> clients
		{
			get
			{
				return this.GetTable<client>();
			}
		}
		
		public System.Data.Linq.Table<Medicament> Medicaments
		{
			get
			{
				return this.GetTable<Medicament>();
			}
		}
		
		public System.Data.Linq.Table<Med_Order> Med_Orders
		{
			get
			{
				return this.GetTable<Med_Order>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.client")]
	public partial class client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_client;
		
		private string _Full_name_client;
		
		private string _Email_client;
		
		private System.Nullable<System.DateTime> _Date_Naissance_client;
		
		private string _Tele_client;
		
		private string _Address_client;
		
		private string _Maladie;
		
		private EntitySet<Med_Order> _Med_Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_clientChanging(int value);
    partial void OnId_clientChanged();
    partial void OnFull_name_clientChanging(string value);
    partial void OnFull_name_clientChanged();
    partial void OnEmail_clientChanging(string value);
    partial void OnEmail_clientChanged();
    partial void OnDate_Naissance_clientChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_Naissance_clientChanged();
    partial void OnTele_clientChanging(string value);
    partial void OnTele_clientChanged();
    partial void OnAddress_clientChanging(string value);
    partial void OnAddress_clientChanged();
    partial void OnMaladieChanging(string value);
    partial void OnMaladieChanged();
    #endregion
		
		public client()
		{
			this._Med_Orders = new EntitySet<Med_Order>(new Action<Med_Order>(this.attach_Med_Orders), new Action<Med_Order>(this.detach_Med_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_client", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_client
		{
			get
			{
				return this._Id_client;
			}
			set
			{
				if ((this._Id_client != value))
				{
					this.OnId_clientChanging(value);
					this.SendPropertyChanging();
					this._Id_client = value;
					this.SendPropertyChanged("Id_client");
					this.OnId_clientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Full_name_client", DbType="VarChar(30)")]
		public string Full_name_client
		{
			get
			{
				return this._Full_name_client;
			}
			set
			{
				if ((this._Full_name_client != value))
				{
					this.OnFull_name_clientChanging(value);
					this.SendPropertyChanging();
					this._Full_name_client = value;
					this.SendPropertyChanged("Full_name_client");
					this.OnFull_name_clientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email_client", DbType="VarChar(60)")]
		public string Email_client
		{
			get
			{
				return this._Email_client;
			}
			set
			{
				if ((this._Email_client != value))
				{
					this.OnEmail_clientChanging(value);
					this.SendPropertyChanging();
					this._Email_client = value;
					this.SendPropertyChanged("Email_client");
					this.OnEmail_clientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Naissance_client", DbType="Date")]
		public System.Nullable<System.DateTime> Date_Naissance_client
		{
			get
			{
				return this._Date_Naissance_client;
			}
			set
			{
				if ((this._Date_Naissance_client != value))
				{
					this.OnDate_Naissance_clientChanging(value);
					this.SendPropertyChanging();
					this._Date_Naissance_client = value;
					this.SendPropertyChanged("Date_Naissance_client");
					this.OnDate_Naissance_clientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tele_client", DbType="VarChar(30)")]
		public string Tele_client
		{
			get
			{
				return this._Tele_client;
			}
			set
			{
				if ((this._Tele_client != value))
				{
					this.OnTele_clientChanging(value);
					this.SendPropertyChanging();
					this._Tele_client = value;
					this.SendPropertyChanged("Tele_client");
					this.OnTele_clientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address_client", DbType="VarChar(30)")]
		public string Address_client
		{
			get
			{
				return this._Address_client;
			}
			set
			{
				if ((this._Address_client != value))
				{
					this.OnAddress_clientChanging(value);
					this.SendPropertyChanging();
					this._Address_client = value;
					this.SendPropertyChanged("Address_client");
					this.OnAddress_clientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maladie", DbType="VarChar(8000)")]
		public string Maladie
		{
			get
			{
				return this._Maladie;
			}
			set
			{
				if ((this._Maladie != value))
				{
					this.OnMaladieChanging(value);
					this.SendPropertyChanging();
					this._Maladie = value;
					this.SendPropertyChanged("Maladie");
					this.OnMaladieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_Med_Order", Storage="_Med_Orders", ThisKey="Id_client", OtherKey="Id_client")]
		public EntitySet<Med_Order> Med_Orders
		{
			get
			{
				return this._Med_Orders;
			}
			set
			{
				this._Med_Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Med_Orders(Med_Order entity)
		{
			this.SendPropertyChanging();
			entity.client = this;
		}
		
		private void detach_Med_Orders(Med_Order entity)
		{
			this.SendPropertyChanging();
			entity.client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Medicaments")]
	public partial class Medicament : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Med;
		
		private string _Name_Med;
		
		private System.Nullable<System.DateTime> _End_date;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<int> _Id_supplier;
		
		private EntitySet<Med_Order> _Med_Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_MedChanging(int value);
    partial void OnId_MedChanged();
    partial void OnName_MedChanging(string value);
    partial void OnName_MedChanged();
    partial void OnEnd_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnEnd_dateChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnId_supplierChanging(System.Nullable<int> value);
    partial void OnId_supplierChanged();
    #endregion
		
		public Medicament()
		{
			this._Med_Orders = new EntitySet<Med_Order>(new Action<Med_Order>(this.attach_Med_Orders), new Action<Med_Order>(this.detach_Med_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Med", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Med
		{
			get
			{
				return this._Id_Med;
			}
			set
			{
				if ((this._Id_Med != value))
				{
					this.OnId_MedChanging(value);
					this.SendPropertyChanging();
					this._Id_Med = value;
					this.SendPropertyChanged("Id_Med");
					this.OnId_MedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Med", DbType="VarChar(30)")]
		public string Name_Med
		{
			get
			{
				return this._Name_Med;
			}
			set
			{
				if ((this._Name_Med != value))
				{
					this.OnName_MedChanging(value);
					this.SendPropertyChanging();
					this._Name_Med = value;
					this.SendPropertyChanged("Name_Med");
					this.OnName_MedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_End_date", DbType="Date")]
		public System.Nullable<System.DateTime> End_date
		{
			get
			{
				return this._End_date;
			}
			set
			{
				if ((this._End_date != value))
				{
					this.OnEnd_dateChanging(value);
					this.SendPropertyChanging();
					this._End_date = value;
					this.SendPropertyChanged("End_date");
					this.OnEnd_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_supplier", DbType="Int")]
		public System.Nullable<int> Id_supplier
		{
			get
			{
				return this._Id_supplier;
			}
			set
			{
				if ((this._Id_supplier != value))
				{
					this.OnId_supplierChanging(value);
					this.SendPropertyChanging();
					this._Id_supplier = value;
					this.SendPropertyChanged("Id_supplier");
					this.OnId_supplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Medicament_Med_Order", Storage="_Med_Orders", ThisKey="Id_Med", OtherKey="Id_Med")]
		public EntitySet<Med_Order> Med_Orders
		{
			get
			{
				return this._Med_Orders;
			}
			set
			{
				this._Med_Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Med_Orders(Med_Order entity)
		{
			this.SendPropertyChanging();
			entity.Medicament = this;
		}
		
		private void detach_Med_Orders(Med_Order entity)
		{
			this.SendPropertyChanging();
			entity.Medicament = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Med_Order")]
	public partial class Med_Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_client;
		
		private int _Id_Med;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<System.DateTime> _Order_Date;
		
		private System.Nullable<decimal> _Total_Price;
		
		private EntityRef<client> _client;
		
		private EntityRef<Medicament> _Medicament;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_clientChanging(int value);
    partial void OnId_clientChanged();
    partial void OnId_MedChanging(int value);
    partial void OnId_MedChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnOrder_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnOrder_DateChanged();
    partial void OnTotal_PriceChanging(System.Nullable<decimal> value);
    partial void OnTotal_PriceChanged();
    #endregion
		
		public Med_Order()
		{
			this._client = default(EntityRef<client>);
			this._Medicament = default(EntityRef<Medicament>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_client", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_client
		{
			get
			{
				return this._Id_client;
			}
			set
			{
				if ((this._Id_client != value))
				{
					if (this._client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_clientChanging(value);
					this.SendPropertyChanging();
					this._Id_client = value;
					this.SendPropertyChanged("Id_client");
					this.OnId_clientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Med", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Med
		{
			get
			{
				return this._Id_Med;
			}
			set
			{
				if ((this._Id_Med != value))
				{
					if (this._Medicament.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_MedChanging(value);
					this.SendPropertyChanging();
					this._Id_Med = value;
					this.SendPropertyChanged("Id_Med");
					this.OnId_MedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Order_Date
		{
			get
			{
				return this._Order_Date;
			}
			set
			{
				if ((this._Order_Date != value))
				{
					this.OnOrder_DateChanging(value);
					this.SendPropertyChanging();
					this._Order_Date = value;
					this.SendPropertyChanged("Order_Date");
					this.OnOrder_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Price", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Total_Price
		{
			get
			{
				return this._Total_Price;
			}
			set
			{
				if ((this._Total_Price != value))
				{
					this.OnTotal_PriceChanging(value);
					this.SendPropertyChanging();
					this._Total_Price = value;
					this.SendPropertyChanged("Total_Price");
					this.OnTotal_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_Med_Order", Storage="_client", ThisKey="Id_client", OtherKey="Id_client", IsForeignKey=true)]
		public client client
		{
			get
			{
				return this._client.Entity;
			}
			set
			{
				client previousValue = this._client.Entity;
				if (((previousValue != value) 
							|| (this._client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._client.Entity = null;
						previousValue.Med_Orders.Remove(this);
					}
					this._client.Entity = value;
					if ((value != null))
					{
						value.Med_Orders.Add(this);
						this._Id_client = value.Id_client;
					}
					else
					{
						this._Id_client = default(int);
					}
					this.SendPropertyChanged("client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Medicament_Med_Order", Storage="_Medicament", ThisKey="Id_Med", OtherKey="Id_Med", IsForeignKey=true)]
		public Medicament Medicament
		{
			get
			{
				return this._Medicament.Entity;
			}
			set
			{
				Medicament previousValue = this._Medicament.Entity;
				if (((previousValue != value) 
							|| (this._Medicament.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Medicament.Entity = null;
						previousValue.Med_Orders.Remove(this);
					}
					this._Medicament.Entity = value;
					if ((value != null))
					{
						value.Med_Orders.Add(this);
						this._Id_Med = value.Id_Med;
					}
					else
					{
						this._Id_Med = default(int);
					}
					this.SendPropertyChanged("Medicament");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
